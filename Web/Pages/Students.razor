@page "/students"
@using Pschool.Shared.ViewModels.StudentViewModels
@inherits StudentBase

<PageTitle>Parents</PageTitle>

<h1>Student info</h1>

@if (ActionType != ActionType.None)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <EditForm Model=@StudentViewModel>
                    <FluentValidationValidator @ref="FluentValidationValidator" Options="@(options => options.IncludeAllRuleSets())" />
                    @if (ActionType == ActionType.Create)
                    {
                        <div class="modal-header">
                            <h4>Create student</h4>
                        </div>
                    }
                    else if (ActionType == ActionType.Update)
                    {
                        <div class="modal-header">
                            <h4>Update student</h4>
                        </div>
                    }
                    else if (ActionType == ActionType.Delete)
                    {
                        <div class="modal-header">
                            <h4>Confirm delete</h4>
                        </div>
                    }
                    @if (ActionType == ActionType.Create || ActionType == ActionType.Update)
                    {
                        <div class="modal-body">

                            <div class="form-group">
                                <label for="firstName">First name:</label>
                                <InputText @bind-Value=StudentViewModel.FirstName class="form-control" id="firstName" />
                                <ValidationMessage For=@(() => StudentViewModel.FirstName) />
                            </div>
                            <div class="form-group">
                                <label for="lastName">Last name:</label>
                                <InputText @bind-Value=StudentViewModel.LastName class="form-control" id="lastName" />
                                <ValidationMessage For=@(() => StudentViewModel.LastName) />
                            </div>
                            <div class="form-group">
                                <label for="classNumber">Class number:</label>
                                <InputNumber @bind-Value=StudentViewModel.ClassNumber class="form-control" id="classNumber" />
                                <ValidationMessage For=@(() => StudentViewModel.ClassNumber) />
                            </div>
                            <div class="form-group">
                                <label for="Email">Email:</label>
                                <InputText @bind-Value=StudentViewModel.Email class="form-control" id="Email" />
                                <ValidationMessage For=@(() => StudentViewModel.Email) />
                            </div>
                            <div class="form-group">
                                <label for="Parents">Student`s parent:</label>

                                <InputSelect id="Parents" class="form-control" @bind-Value=StudentViewModel.ParentId>

                                    <option value="-1"> Select Parent... </option>
                                    @foreach (var parent in Parents)
                                    {
                                        <option value="@parent.Id">@parent.FirstName @parent.LastName</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For=@(() => StudentViewModel.ParentId) />
                            </div>
                            <br />
                            @if (ActionType == ActionType.Create)
                            {
                                <div>
                                    <label for="profilePicture">Profile Picture:</label>
                                    <InputFile OnChange="@LoadFiles" class="form-control" accept=".docx" />
                                </div>
                            }
                        </div>
                    }
                    @if (ActionType == ActionType.Delete)
                    {
                        <div class="modal-body">
                            <h>Are you sure you want to delete parent?</h>
                        </div>
                    }

                    <div class="modal-footer">
                        <div class="button-group">
                            @if (ActionType == ActionType.Create)
                            {
                                <button class="btn btn-success" @onclick="Add">Add</button>
                            }
                            @if (ActionType == ActionType.Update)
                            {
                                <button class="btn btn-primary" @onclick="Update">Update</button>
                            }
                            @if (ActionType == ActionType.Delete)
                            {
                                <button class="btn btn-danger" @onclick="Delete">Delete</button>
                            }
                            <button class="btn btn-secondary" @onclick="ModalCancel">Cancel</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

<EditForm Model="StudentViewModel">

    <button class="btn btn-success" @onclick="() => ShowDialogModal(ActionType.Create, new StudentDetailsViewModel())">Add</button>
    <label>Filter by parents:</label>

    <InputSelect id="parent" class="form-control"
                 ValueExpression="@(() => ParentId)"
                 Value="@ParentId"
                 ValueChanged="@((long value) => OnParentChange(value))">

        <option value="-1"> Select Parent... </option>
        @foreach (var parent in Parents)
        {
            <option value="@parent.Id">@parent.FirstName @parent.LastName</option>
        }

    </InputSelect>
</EditForm>

<table class="table">
    <thead>
        <tr>
            <th>First name</th>
            <th>Last name</th>
            <th>Parent</th>
            <th>Class number</th>
            <th>Email</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Students!)
        {
            <tr>
                <td>@student.FirstName</td>
                <td>@student.LastName</td>
                <td>@student.ParentFullName</td>
                <td align="center">@student.ClassNumber</td>
                <th>@student.Email</th>
                <td>
                    <button class="btn btn-primary"
                        @onclick="() => ShowDialogModal(
                                ActionType.Update,
                                new StudentDetailsViewModel() {
                                    Id = student.Id,
                                    ParentId = student.ParentId,
                                    ClassNumber = student.ClassNumber,
                                    FirstName = student.FirstName,
                                    LastName = student.LastName,
                                    Email = student.Email})">
                        Edit
                    </button>
                    <button class="btn btn-danger" @onclick="() => ShowDialogModal(ActionType.Delete, student)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>